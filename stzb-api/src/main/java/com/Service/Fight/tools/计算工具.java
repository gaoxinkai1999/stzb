//package com.Service.Fight.tools;
//
//import org.springframework.stereotype.Component;
//
//@Component
//public class 计算工具 {
//
//    public void 策略伤害计算(){
//        double 目标谋略影响 = 0;
//        //
//        double 目标谋略=作用者.谋略*(1-无视谋略计算());
//        // 目标谋略影响
//        // 目标谋略影响（当目标谋略>50） = 1-（75-9375/（75+目标谋略））/100
//        if (目标谋略 >= 50) {
//            目标谋略影响 = 1 - (75 - 9375 / (75 + 目标谋略)) / 100;
//        }
//        // 目标谋略影响（当目标谋略<50)  =  1
//        else {
//            目标谋略影响 = 1;
//        }
//        // 兵力基础伤害（普通） = 178*兵力/6459 +兵力
//        double 兵力基础伤害 = 178 * 攻击者.兵力 / (6459 + 攻击者.兵力);
//        // 兵力基础伤害（燃烧、恐慌、妖术） = 兵力基础伤害（普通）/ 3
//
//        // 谋略基础伤害（普通） = 谋略属性 * 0.5 *max（0.1，1+Σ增减伤）* 目标谋略影响
//        double 谋略伤害 = 攻击者.谋略 * 0.5 * Math.max(0.1, 1 + 增减伤) * 目标谋略影响;
//        // 谋略基础伤害（燃烧、恐慌、妖术） = 谋略属性 * 0.25 *max（0.1，1+Σ增减伤）* 目标谋略影响
//        if (是否为特殊伤害){
//            兵力基础伤害=兵力基础伤害/3;
//            谋略伤害=谋略伤害/2;
//        }
//
//        // 主要伤害 = 300*兵力/3500+兵力  *伤害率*max（0.1，1+Σ增减伤）* 目标谋略影响
//        double 主要伤害 = 300 * 攻击者.兵力 / (3500 + 攻击者.兵力) * 伤害率 * Math.max(0.1, 1 + 增减伤) * 目标谋略影响;
//        // 策略伤害 =兵力基础伤害 + 谋略基础伤害 +主要伤害
//        伤害 = (int) Math.round(兵力基础伤害 + 谋略伤害 + 主要伤害);
//
//    }
//}
